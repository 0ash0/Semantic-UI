{"version":3,"sources":["tab.js"],"names":["$","window","document","undefined","Math","self","Function","fn","tab","parameters","returnedValue","$allModules","isFunction","this","moduleSelector","selector","time","Date","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","call","initializedHistory","each","$context","$tabs","activeTabPath","parameterArray","module","historyEvent","settings","isPlainObject","extend","className","metadata","error","eventNamespace","namespace","moduleNamespace","$module","cache","firstLoad","recursionDepth","element","instance","data","initialize","debug","fix","callbacks","determineTabs","context","auto","set","bind","events","history","initializeHistory","instantiate","verbose","destroy","removeData","off","isWindow","on","event","click","$reference","closest","ui","length","parent","childrenOnly","children","tabs","find","onTabLoad","onTabInit","onLoad","legacyLoad","onFirstLoad","legacyInit","address","state","historyType","path","change","tabPath","value","changeTab","preventDefault","pathNames","join","get","initialPath","pageTitle","templates","determineTitle","display","title","refresh","read","cacheKey","add","content","remove","url","replace","apiSettings","loading","$tab","tabElement","isLoading","hasClass","addClass","siblings","removeClass","active","onRequest","pushStateAvailable","pushState","shouldIgnoreLoad","ignoreFirstLoad","remoteContent","pathArray","utilities","pathToArray","defaultPathArray","arrayToPath","index","$anchor","nextPathArray","nextPath","isLastTab","currentPathArray","currentPath","isTab","is","isLastIndex","filterArray","html","activate","all","navigation","fetch","search","missingTab","setTimeout","scrollTo","$element","scrollOffset","offset","top","scrollTop","update","evaluateScripts","cacheType","toLowerCase","empty","append","clone","innerHTML","fullTabPath","requestSettings","cachedContent","dataType","encodeParameters","alwaysRefresh","headers","X-Remote","onSuccess","response","$clone","not","urlData","request","api","existingRequest","$deactiveTabs","deactivate","isActive","onVisible","$navigation","navElement","$deactiveNavigation","tabName","eq","defaultPath","$defaultNav","filter","defaultTab","maxDepth","recursion","$fullPathTab","$simplePathTab","tabPathArray","lastTab","last","keepArray","removeArray","grep","keepValue","inArray","array","isArray","pathName","split","setting","name","internal","silent","log","prototype","console","info","apply","message","currentTime","executionTime","previousTime","push","Name","Arguments","Element","Execution Time","clearTimeout","timer","totalTime","group","table","groupCollapsed","groupEnd","invoke","passedArguments","found","object","depth","camelCaseValue","charAt","toUpperCase","method","tabArray","noContent","loaded","promise","jQuery"],"mappings":"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","file":"tab.min.js","sourcesContent":["/*!\n * # Semantic UI 2.2.6 - Tab\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.tab = function(parameters) {\n\n  var\n    // use window context if none specified\n    $allModules     = $.isFunction(this)\n        ? $(window)\n        : $(this),\n\n    moduleSelector  = $allModules.selector || '',\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n\n    initializedHistory = false,\n    returnedValue\n  ;\n\n  $allModules\n    .each(function() {\n      var\n\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.tab.settings, parameters)\n          : $.extend({}, $.fn.tab.settings),\n\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + settings.namespace,\n        moduleNamespace = 'module-' + settings.namespace,\n\n        $module         = $(this),\n        $context,\n        $tabs,\n\n        cache           = {},\n        firstLoad       = true,\n        recursionDepth  = 0,\n        element         = this,\n        instance        = $module.data(moduleNamespace),\n\n        activeTabPath,\n        parameterArray,\n        module,\n\n        historyEvent\n\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.debug('Initializing tab menu item', $module);\n          module.fix.callbacks();\n          module.determineTabs();\n\n          module.debug('Determining tabs', settings.context, $tabs);\n          // set up automatic routing\n          if(settings.auto) {\n            module.set.auto();\n          }\n          module.bind.events();\n\n          if(settings.history && !initializedHistory) {\n            module.initializeHistory();\n            initializedHistory = true;\n          }\n\n          module.instantiate();\n        },\n\n        instantiate: function () {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.debug('Destroying tabs', $module);\n          $module\n            .removeData(moduleNamespace)\n            .off(eventNamespace)\n          ;\n        },\n\n        bind: {\n          events: function() {\n            // if using $.tab don't add events\n            if( !$.isWindow( element ) ) {\n              module.debug('Attaching tab activation events to element', $module);\n              $module\n                .on('click' + eventNamespace, module.event.click)\n              ;\n            }\n          }\n        },\n\n        determineTabs: function() {\n          var\n            $reference\n          ;\n\n          // determine tab context\n          if(settings.context === 'parent') {\n            if($module.closest(selector.ui).length > 0) {\n              $reference = $module.closest(selector.ui);\n              module.verbose('Using closest UI element as parent', $reference);\n            }\n            else {\n              $reference = $module;\n            }\n            $context = $reference.parent();\n            module.verbose('Determined parent element for creating context', $context);\n          }\n          else if(settings.context) {\n            $context = $(settings.context);\n            module.verbose('Using selector for tab context', settings.context, $context);\n          }\n          else {\n            $context = $('body');\n          }\n          // find tabs\n          if(settings.childrenOnly) {\n            $tabs = $context.children(selector.tabs);\n            module.debug('Searching tab context children for tabs', $context, $tabs);\n          }\n          else {\n            $tabs = $context.find(selector.tabs);\n            module.debug('Searching tab context for tabs', $context, $tabs);\n          }\n        },\n\n        fix: {\n          callbacks: function() {\n            if( $.isPlainObject(parameters) && (parameters.onTabLoad || parameters.onTabInit) ) {\n              if(parameters.onTabLoad) {\n                parameters.onLoad = parameters.onTabLoad;\n                delete parameters.onTabLoad;\n                module.error(error.legacyLoad, parameters.onLoad);\n              }\n              if(parameters.onTabInit) {\n                parameters.onFirstLoad = parameters.onTabInit;\n                delete parameters.onTabInit;\n                module.error(error.legacyInit, parameters.onFirstLoad);\n              }\n              settings = $.extend(true, {}, $.fn.tab.settings, parameters);\n            }\n          }\n        },\n\n        initializeHistory: function() {\n          module.debug('Initializing page state');\n          if( $.address === undefined ) {\n            module.error(error.state);\n            return false;\n          }\n          else {\n            if(settings.historyType == 'state') {\n              module.debug('Using HTML5 to manage state');\n              if(settings.path !== false) {\n                $.address\n                  .history(true)\n                  .state(settings.path)\n                ;\n              }\n              else {\n                module.error(error.path);\n                return false;\n              }\n            }\n            $.address\n              .bind('change', module.event.history.change)\n            ;\n          }\n        },\n\n        event: {\n          click: function(event) {\n            var\n              tabPath = $(this).data(metadata.tab)\n            ;\n            if(tabPath !== undefined) {\n              if(settings.history) {\n                module.verbose('Updating page state', event);\n                $.address.value(tabPath);\n              }\n              else {\n                module.verbose('Changing tab', event);\n                module.changeTab(tabPath);\n              }\n              event.preventDefault();\n            }\n            else {\n              module.debug('No tab specified');\n            }\n          },\n          history: {\n            change: function(event) {\n              var\n                tabPath   = event.pathNames.join('/') || module.get.initialPath(),\n                pageTitle = settings.templates.determineTitle(tabPath) || false\n              ;\n              module.performance.display();\n              module.debug('History change event', tabPath, event);\n              historyEvent = event;\n              if(tabPath !== undefined) {\n                module.changeTab(tabPath);\n              }\n              if(pageTitle) {\n                $.address.title(pageTitle);\n              }\n            }\n          }\n        },\n\n        refresh: function() {\n          if(activeTabPath) {\n            module.debug('Refreshing tab', activeTabPath);\n            module.changeTab(activeTabPath);\n          }\n        },\n\n        cache: {\n\n          read: function(cacheKey) {\n            return (cacheKey !== undefined)\n              ? cache[cacheKey]\n              : false\n            ;\n          },\n          add: function(cacheKey, content) {\n            cacheKey = cacheKey || activeTabPath;\n            module.debug('Adding cached content for', cacheKey);\n            cache[cacheKey] = content;\n          },\n          remove: function(cacheKey) {\n            cacheKey = cacheKey || activeTabPath;\n            module.debug('Removing cached content for', cacheKey);\n            delete cache[cacheKey];\n          }\n        },\n\n        set: {\n          auto: function() {\n            var\n              url = (typeof settings.path == 'string')\n                ? settings.path.replace(/\\/$/, '') + '/{$tab}'\n                : '/{$tab}'\n            ;\n            module.verbose('Setting up automatic tab retrieval from server', url);\n            if($.isPlainObject(settings.apiSettings)) {\n              settings.apiSettings.url = url;\n            }\n            else {\n              settings.apiSettings = {\n                url: url\n              };\n            }\n          },\n          loading: function(tabPath) {\n            var\n              $tab      = module.get.tabElement(tabPath),\n              isLoading = $tab.hasClass(className.loading)\n            ;\n            if(!isLoading) {\n              module.verbose('Setting loading state for', $tab);\n              $tab\n                .addClass(className.loading)\n                .siblings($tabs)\n                  .removeClass(className.active + ' ' + className.loading)\n              ;\n              if($tab.length > 0) {\n                settings.onRequest.call($tab[0], tabPath);\n              }\n            }\n          },\n          state: function(state) {\n            $.address.value(state);\n          }\n        },\n\n        changeTab: function(tabPath) {\n          var\n            pushStateAvailable = (window.history && window.history.pushState),\n            shouldIgnoreLoad   = (pushStateAvailable && settings.ignoreFirstLoad && firstLoad),\n            remoteContent      = (settings.auto || $.isPlainObject(settings.apiSettings) ),\n            // only add default path if not remote content\n            pathArray = (remoteContent && !shouldIgnoreLoad)\n              ? module.utilities.pathToArray(tabPath)\n              : module.get.defaultPathArray(tabPath)\n          ;\n          tabPath = module.utilities.arrayToPath(pathArray);\n          $.each(pathArray, function(index, tab) {\n            var\n              currentPathArray   = pathArray.slice(0, index + 1),\n              currentPath        = module.utilities.arrayToPath(currentPathArray),\n\n              isTab              = module.is.tab(currentPath),\n              isLastIndex        = (index + 1 == pathArray.length),\n\n              $tab               = module.get.tabElement(currentPath),\n              $anchor,\n              nextPathArray,\n              nextPath,\n              isLastTab\n            ;\n            module.verbose('Looking for tab', tab);\n            if(isTab) {\n              module.verbose('Tab was found', tab);\n              // scope up\n              activeTabPath  = currentPath;\n              parameterArray = module.utilities.filterArray(pathArray, currentPathArray);\n\n              if(isLastIndex) {\n                isLastTab = true;\n              }\n              else {\n                nextPathArray = pathArray.slice(0, index + 2);\n                nextPath      = module.utilities.arrayToPath(nextPathArray);\n                isLastTab     = ( !module.is.tab(nextPath) );\n                if(isLastTab) {\n                  module.verbose('Tab parameters found', nextPathArray);\n                }\n              }\n              if(isLastTab && remoteContent) {\n                if(!shouldIgnoreLoad) {\n                  module.activate.navigation(currentPath);\n                  module.fetch.content(currentPath, tabPath);\n                }\n                else {\n                  module.debug('Ignoring remote content on first tab load', currentPath);\n                  firstLoad = false;\n                  module.cache.add(tabPath, $tab.html());\n                  module.activate.all(currentPath);\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                  settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                return false;\n              }\n              else {\n                module.debug('Opened local tab', currentPath);\n                module.activate.all(currentPath);\n                if( !module.cache.read(currentPath) ) {\n                  module.cache.add(currentPath, true);\n                  module.debug('First time tab loaded calling tab init');\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n              }\n\n            }\n            else if(tabPath.search('/') == -1 && tabPath !== '') {\n              // look for in page anchor\n              $anchor     = $('#' + tabPath + ', a[name=\"' + tabPath + '\"]');\n              currentPath = $anchor.closest('[data-tab]').data(metadata.tab);\n              $tab        = module.get.tabElement(currentPath);\n              // if anchor exists use parent tab\n              if($anchor && $anchor.length > 0 && currentPath) {\n                module.debug('Anchor link used, opening parent tab', $tab, $anchor);\n                if( !$tab.hasClass(className.active) ) {\n                  setTimeout(function() {\n                    module.scrollTo($anchor);\n                  }, 0);\n                }\n                module.activate.all(currentPath);\n                if( !module.cache.read(currentPath) ) {\n                  module.cache.add(currentPath, true);\n                  module.debug('First time tab loaded calling tab init');\n                  settings.onFirstLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                }\n                settings.onLoad.call($tab[0], currentPath, parameterArray, historyEvent);\n                return false;\n              }\n            }\n            else {\n              module.error(error.missingTab, $module, $context, currentPath);\n              return false;\n            }\n          });\n        },\n\n        scrollTo: function($element) {\n          var\n            scrollOffset = ($element && $element.length > 0)\n              ? $element.offset().top\n              : false\n          ;\n          if(scrollOffset !== false) {\n            module.debug('Forcing scroll to an in-page link in a hidden tab', scrollOffset, $element);\n            $(document).scrollTop(scrollOffset);\n          }\n        },\n\n        update: {\n          content: function(tabPath, html, evaluateScripts) {\n            var\n              $tab = module.get.tabElement(tabPath),\n              tab  = $tab[0]\n            ;\n            evaluateScripts = (evaluateScripts !== undefined)\n              ? evaluateScripts\n              : settings.evaluateScripts\n            ;\n            if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && typeof html !== 'string') {\n              $tab\n                .empty()\n                .append($(html).clone(true))\n              ;\n            }\n            else {\n              if(evaluateScripts) {\n                module.debug('Updating HTML and evaluating inline scripts', tabPath, html);\n                $tab.html(html);\n              }\n              else {\n                module.debug('Updating HTML', tabPath, html);\n                tab.innerHTML = html;\n              }\n            }\n          }\n        },\n\n        fetch: {\n\n          content: function(tabPath, fullTabPath) {\n            var\n              $tab        = module.get.tabElement(tabPath),\n              apiSettings = {\n                dataType         : 'html',\n                encodeParameters : false,\n                on               : 'now',\n                cache            : settings.alwaysRefresh,\n                headers          : {\n                  'X-Remote': true\n                },\n                onSuccess : function(response) {\n                  if(settings.cacheType == 'response') {\n                    module.cache.add(fullTabPath, response);\n                  }\n                  module.update.content(tabPath, response);\n                  if(tabPath == activeTabPath) {\n                    module.debug('Content loaded', tabPath);\n                    module.activate.tab(tabPath);\n                  }\n                  else {\n                    module.debug('Content loaded in background', tabPath);\n                  }\n                  settings.onFirstLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n                  settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n\n                  if(typeof settings.cacheType == 'string' && settings.cacheType.toLowerCase() == 'dom' && $tab.children().length > 0) {\n                    setTimeout(function() {\n                      var\n                        $clone = $tab.children().clone(true)\n                      ;\n                      $clone = $clone.not('script');\n                      module.cache.add(fullTabPath, $clone);\n                    }, 0);\n                  }\n                  else {\n                    module.cache.add(fullTabPath, $tab.html());\n                  }\n                },\n                urlData: {\n                  tab: fullTabPath\n                }\n              },\n              request         = $tab.api('get request') || false,\n              existingRequest = ( request && request.state() === 'pending' ),\n              requestSettings,\n              cachedContent\n            ;\n\n            fullTabPath   = fullTabPath || tabPath;\n            cachedContent = module.cache.read(fullTabPath);\n\n\n            if(settings.cache && cachedContent) {\n              module.activate.tab(tabPath);\n              module.debug('Adding cached content', fullTabPath);\n              if(settings.evaluateScripts == 'once') {\n                module.update.content(tabPath, cachedContent, false);\n              }\n              else {\n                module.update.content(tabPath, cachedContent);\n              }\n              settings.onLoad.call($tab[0], tabPath, parameterArray, historyEvent);\n            }\n            else if(existingRequest) {\n              module.set.loading(tabPath);\n              module.debug('Content is already loading', fullTabPath);\n            }\n            else if($.api !== undefined) {\n              requestSettings = $.extend(true, {}, settings.apiSettings, apiSettings);\n              module.debug('Retrieving remote content', fullTabPath, requestSettings);\n              module.set.loading(tabPath);\n              $tab.api(requestSettings);\n            }\n            else {\n              module.error(error.api);\n            }\n          }\n        },\n\n        activate: {\n          all: function(tabPath) {\n            module.activate.tab(tabPath);\n            module.activate.navigation(tabPath);\n          },\n          tab: function(tabPath) {\n            var\n              $tab          = module.get.tabElement(tabPath),\n              $deactiveTabs = (settings.deactivate == 'siblings')\n                ? $tab.siblings($tabs)\n                : $tabs.not($tab),\n              isActive      = $tab.hasClass(className.active)\n            ;\n            module.verbose('Showing tab content for', $tab);\n            if(!isActive) {\n              $tab\n                .addClass(className.active)\n              ;\n              $deactiveTabs\n                .removeClass(className.active + ' ' + className.loading)\n              ;\n              if($tab.length > 0) {\n                settings.onVisible.call($tab[0], tabPath);\n              }\n            }\n          },\n          navigation: function(tabPath) {\n            var\n              $navigation         = module.get.navElement(tabPath),\n              $deactiveNavigation = (settings.deactivate == 'siblings')\n                ? $navigation.siblings($allModules)\n                : $allModules.not($navigation),\n              isActive    = $navigation.hasClass(className.active)\n            ;\n            module.verbose('Activating tab navigation for', $navigation, tabPath);\n            if(!isActive) {\n              $navigation\n                .addClass(className.active)\n              ;\n              $deactiveNavigation\n                .removeClass(className.active + ' ' + className.loading)\n              ;\n            }\n          }\n        },\n\n        deactivate: {\n          all: function() {\n            module.deactivate.navigation();\n            module.deactivate.tabs();\n          },\n          navigation: function() {\n            $allModules\n              .removeClass(className.active)\n            ;\n          },\n          tabs: function() {\n            $tabs\n              .removeClass(className.active + ' ' + className.loading)\n            ;\n          }\n        },\n\n        is: {\n          tab: function(tabName) {\n            return (tabName !== undefined)\n              ? ( module.get.tabElement(tabName).length > 0 )\n              : false\n            ;\n          }\n        },\n\n        get: {\n          initialPath: function() {\n            return $allModules.eq(0).data(metadata.tab) || $tabs.eq(0).data(metadata.tab);\n          },\n          path: function() {\n            return $.address.value();\n          },\n          // adds default tabs to tab path\n          defaultPathArray: function(tabPath) {\n            return module.utilities.pathToArray( module.get.defaultPath(tabPath) );\n          },\n          defaultPath: function(tabPath) {\n            var\n              $defaultNav = $allModules.filter('[data-' + metadata.tab + '^=\"' + tabPath + '/\"]').eq(0),\n              defaultTab  = $defaultNav.data(metadata.tab) || false\n            ;\n            if( defaultTab ) {\n              module.debug('Found default tab', defaultTab);\n              if(recursionDepth < settings.maxDepth) {\n                recursionDepth++;\n                return module.get.defaultPath(defaultTab);\n              }\n              module.error(error.recursion);\n            }\n            else {\n              module.debug('No default tabs found for', tabPath, $tabs);\n            }\n            recursionDepth = 0;\n            return tabPath;\n          },\n          navElement: function(tabPath) {\n            tabPath = tabPath || activeTabPath;\n            return $allModules.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n          },\n          tabElement: function(tabPath) {\n            var\n              $fullPathTab,\n              $simplePathTab,\n              tabPathArray,\n              lastTab\n            ;\n            tabPath        = tabPath || activeTabPath;\n            tabPathArray   = module.utilities.pathToArray(tabPath);\n            lastTab        = module.utilities.last(tabPathArray);\n            $fullPathTab   = $tabs.filter('[data-' + metadata.tab + '=\"' + tabPath + '\"]');\n            $simplePathTab = $tabs.filter('[data-' + metadata.tab + '=\"' + lastTab + '\"]');\n            return ($fullPathTab.length > 0)\n              ? $fullPathTab\n              : $simplePathTab\n            ;\n          },\n          tab: function() {\n            return activeTabPath;\n          }\n        },\n\n        utilities: {\n          filterArray: function(keepArray, removeArray) {\n            return $.grep(keepArray, function(keepValue) {\n              return ( $.inArray(keepValue, removeArray) == -1);\n            });\n          },\n          last: function(array) {\n            return $.isArray(array)\n              ? array[ array.length - 1]\n              : false\n            ;\n          },\n          pathToArray: function(pathName) {\n            if(pathName === undefined) {\n              pathName = activeTabPath;\n            }\n            return typeof pathName == 'string'\n              ? pathName.split('/')\n              : [pathName]\n            ;\n          },\n          arrayToPath: function(pathArray) {\n            return $.isArray(pathArray)\n              ? pathArray.join('/')\n              : false\n            ;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                module.error(error.method, query);\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n\n};\n\n// shortcut for tabbed content with no defined navigation\n$.tab = function() {\n  $(window).tab.apply(this, arguments);\n};\n\n$.fn.tab.settings = {\n\n  name            : 'Tab',\n  namespace       : 'tab',\n\n  silent          : false,\n  debug           : false,\n  verbose         : false,\n  performance     : true,\n\n  auto            : false,      // uses pjax style endpoints fetching content from same url with remote-content headers\n  history         : false,      // use browser history\n  historyType     : 'hash',     // #/ or html5 state\n  path            : false,      // base path of url\n\n  context         : false,      // specify a context that tabs must appear inside\n  childrenOnly    : false,      // use only tabs that are children of context\n  maxDepth        : 25,         // max depth a tab can be nested\n\n  deactivate      : 'siblings', // whether tabs should deactivate sibling menu elements or all elements initialized together\n\n  alwaysRefresh   : false,      // load tab content new every tab click\n  cache           : true,       // cache the content requests to pull locally\n  cacheType       : 'response', // Whether to cache exact response, or to html cache contents after scripts execute\n  ignoreFirstLoad : false,      // don't load remote content on first load\n\n  apiSettings     : false,      // settings for api call\n  evaluateScripts : 'once',     // whether inline scripts should be parsed (true/false/once). Once will not re-evaluate on cached content\n\n  onFirstLoad : function(tabPath, parameterArray, historyEvent) {}, // called first time loaded\n  onLoad      : function(tabPath, parameterArray, historyEvent) {}, // called on every load\n  onVisible   : function(tabPath, parameterArray, historyEvent) {}, // called every time tab visible\n  onRequest   : function(tabPath, parameterArray, historyEvent) {}, // called ever time a tab beings loading remote content\n\n  templates : {\n    determineTitle: function(tabArray) {} // returns page title for path\n  },\n\n  error: {\n    api        : 'You attempted to load content without API module',\n    method     : 'The method you called is not defined',\n    missingTab : 'Activated tab cannot be found. Tabs are case-sensitive.',\n    noContent  : 'The tab you specified is missing a content url.',\n    path       : 'History enabled, but no path was specified',\n    recursion  : 'Max recursive depth reached',\n    legacyInit : 'onTabInit has been renamed to onFirstLoad in 2.0, please adjust your code.',\n    legacyLoad : 'onTabLoad has been renamed to onLoad in 2.0. Please adjust your code',\n    state      : 'History requires Asual\\'s Address library <https://github.com/asual/jquery-address>'\n  },\n\n  metadata : {\n    tab    : 'tab',\n    loaded : 'loaded',\n    promise: 'promise'\n  },\n\n  className   : {\n    loading : 'loading',\n    active  : 'active'\n  },\n\n  selector    : {\n    tabs : '.ui.tab',\n    ui   : '.ui'\n  }\n\n};\n\n})( jQuery, window, document );\n"]}