{"version":3,"sources":["rating.js"],"names":["$","window","document","undefined","Math","self","Function","fn","rating","parameters","returnedValue","$allModules","this","moduleSelector","selector","time","Date","getTime","performance","query","arguments","methodInvoked","queryArguments","slice","call","each","initialLoad","module","settings","isPlainObject","extend","namespace","className","metadata","eventNamespace","error","moduleNamespace","element","instance","data","$module","$icon","find","icon","initialize","verbose","length","setup","layout","interactive","enable","disable","set","get","initialRating","remove","instantiate","destroy","events","removeData","refresh","maxRating","html","templates","debug","event","mouseenter","$activeIcon","nextAll","removeClass","selected","addClass","prevAll","mouseleave","click","currentRating","index","canClear","clearable","clearRating","bind","on","off","disabled","is","filter","active","ratingIndex","eq","addBack","onRate","setting","name","value","internal","silent","log","prototype","console","info","apply","message","currentTime","executionTime","previousTime","push","Name","Arguments","Element","Execution Time","clearTimeout","timer","setTimeout","display","title","totalTime","group","table","groupCollapsed","groupEnd","invoke","passedArguments","context","maxDepth","found","response","object","split","depth","camelCaseValue","charAt","toUpperCase","isFunction","isArray","slent","fireOnInit","method","noMaximum","loading","jQuery"],"mappings":";;;;;;;;;CAUC,SAAWA,EAAGC,EAAQC,EAAUC,GAEjC,YAEAF,GAA2B,mBAAVA,IAAyBA,EAAOG,MAAQA,KACrDH,EACgB,mBAARI,OAAuBA,KAAKD,MAAQA,KAC1CC,KACAC,SAAS,iBAGfN,EAAEO,GAAGC,OAAS,SAASC,GACrB,GAUEC,GATAC,EAAkBX,EAAEY,MACpBC,EAAkBF,EAAYG,UAAY,GAE1CC,GAAkB,GAAIC,OAAOC,UAC7BC,KAEAC,EAAkBC,UAAU,GAC5BC,EAAmC,gBAATF,GAC1BG,KAAqBC,MAAMC,KAAKJ,UAAW,EA6Z7C,OA1ZAT,GACGc,KAAK,WACJ,GAoBEC,GACAC,EApBAC,EAAoB5B,EAAE6B,cAAcpB,GAChCT,EAAE8B,QAAO,KAAU9B,EAAEO,GAAGC,OAAOoB,SAAUnB,GACzCT,EAAE8B,UAAW9B,EAAEO,GAAGC,OAAOoB,UAE7BG,EAAkBH,EAASG,UAC3BC,EAAkBJ,EAASI,UAC3BC,EAAkBL,EAASK,SAC3BnB,EAAkBc,EAASd,SAG3BoB,GAFkBN,EAASO,MAET,IAAMJ,GACxBK,EAAkB,UAAYL,EAE9BM,EAAkBzB,KAClB0B,EAAkBtC,EAAEY,MAAM2B,KAAKH,GAE/BI,EAAkBxC,EAAEY,MACpB6B,EAAkBD,EAAQE,KAAK5B,EAAS6B,KAM1ChB,IAEEiB,WAAY,WACVjB,EAAOkB,QAAQ,6BAA8BjB,GAEzB,IAAjBa,EAAMK,QACPnB,EAAOoB,MAAMC,SAGZpB,EAASqB,YACVtB,EAAOuB,SAGPvB,EAAOwB,UAETxB,EAAOyB,IAAI1B,cACXC,EAAOyB,IAAI5C,OAAQmB,EAAO0B,IAAIC,iBAC9B3B,EAAO4B,OAAO7B,cACdC,EAAO6B,eAGTA,YAAa,WACX7B,EAAOkB,QAAQ,uBAAwBjB,GACvCU,EAAWX,EACXa,EACGD,KAAKH,EAAiBT,IAI3B8B,QAAS,WACP9B,EAAOkB,QAAQ,+BAAgCP,GAC/CX,EAAO4B,OAAOG,SACdlB,EACGmB,WAAWvB,IAIhBwB,QAAS,WACPnB,EAAUD,EAAQE,KAAK5B,EAAS6B,OAGlCI,OACEC,OAAQ,WACN,GACEa,GAAYlC,EAAO0B,IAAIQ,YACvBC,EAAY9D,EAAEO,GAAGC,OAAOoB,SAASmC,UAAUpB,KAAKkB,EAElDlC,GAAOqC,MAAM,oCACbxB,EACGsB,KAAKA,GAERnC,EAAOiC,YAIXK,OACEC,WAAY,WACV,GACEC,GAAcnE,EAAEY,KAElBuD,GACGC,UACEC,YAAYrC,EAAUsC,UAE3B9B,EACG+B,SAASvC,EAAUsC,UAEtBH,EACGI,SAASvC,EAAUsC,UACjBE,UACAD,SAASvC,EAAUsC,WAG1BG,WAAY,WACVjC,EACG6B,YAAYrC,EAAUsC,UAEzB7B,EACG4B,YAAYrC,EAAUsC,WAG3BI,MAAO,WACL,GACEP,GAAgBnE,EAAEY,MAClB+D,EAAgBhD,EAAO0B,IAAI7C,SAC3BA,EAAgBiC,EAAMmC,MAAMT,GAAe,EAC3CU,EAAuC,QAAtBjD,EAASkD,UACL,IAAjBrC,EAAMK,OACPlB,EAASkD,SAEXD,IAAYF,GAAiBnE,EAC9BmB,EAAOoD,cAGPpD,EAAOyB,IAAI5C,OAAQA,KAKzBuE,YAAa,WACXpD,EAAOqC,MAAM,2BACbrC,EAAOyB,IAAI5C,OAAO,IAGpBwE,MACEtB,OAAQ,WACN/B,EAAOkB,QAAQ,kBACfL,EACGyC,GAAG,aAAe/C,EAAgBpB,EAAS6B,KAAMhB,EAAOsC,MAAMC,YAC9De,GAAG,aAAe/C,EAAgBpB,EAAS6B,KAAMhB,EAAOsC,MAAMQ,YAC9DQ,GAAG,QAAe/C,EAAgBpB,EAAS6B,KAAMhB,EAAOsC,MAAMS,SAKrEnB,QACEG,OAAQ,WACN/B,EAAOkB,QAAQ,mBACfL,EACG0C,IAAIhD,IAGTR,YAAa,WACXA,GAAc,IAIlBwB,OAAQ,WACNvB,EAAOqC,MAAM,sCACbrC,EAAOqD,KAAKtB,SACZlB,EACG6B,YAAYrC,EAAUmD,WAI3BhC,QAAS,WACPxB,EAAOqC,MAAM,oCACbrC,EAAO4B,OAAOG,SACdlB,EACG+B,SAASvC,EAAUmD,WAIxBC,IACE1D,YAAa,WACX,MAAOA,KAIX2B,KACEC,cAAe,WACb,MAAGd,GAAQD,KAAKN,EAASzB,UAAYL,GACnCqC,EAAQmB,WAAW1B,EAASzB,QACrBgC,EAAQD,KAAKN,EAASzB,SAExBoB,EAAS0B,eAElBO,UAAW,WACT,MAAGrB,GAAQD,KAAKN,EAAS4B,aAAe1D,GACtCqC,EAAQmB,WAAW1B,EAAS4B,WACrBrB,EAAQD,KAAKN,EAAS4B,YAExBjC,EAASiC,WAElBrD,OAAQ,WACN,GACEmE,GAAgBlC,EAAM4C,OAAO,IAAMrD,EAAUsD,QAAQxC,MAGvD,OADAnB,GAAOkB,QAAQ,2BAA4B8B,GACpCA,IAIXvB,KACE5C,OAAQ,SAASA,GACf,GACE+E,GAAe/E,EAAS,GAAK,EACxBA,EAAS,EACV,EACJ2D,EAAc1B,EAAM+C,GAAGD,EAEzB/C,GACG6B,YAAYrC,EAAUsC,UAEzB7B,EACG4B,YAAYrC,EAAUsC,UACtBD,YAAYrC,EAAUsD,QAEtB9E,EAAS,IACVmB,EAAOkB,QAAQ,4BAA6BrC,GAC5C2D,EACGK,UACAiB,UACElB,SAASvC,EAAUsD,SAGtB3D,EAAOyD,GAAG1D,eACZE,EAAS8D,OAAOlE,KAAKa,EAAS7B,IAGlCkB,YAAa,WACXA,GAAc,IAIlBiE,QAAS,SAASC,EAAMC,GAEtB,GADAlE,EAAOqC,MAAM,mBAAoB4B,EAAMC,GACnC7F,EAAE6B,cAAc+D,GAClB5F,EAAE8B,QAAO,EAAMF,EAAUgE,OAEtB,CAAA,GAAGC,IAAU1F,EAShB,MAAOyB,GAASgE,EARb5F,GAAE6B,cAAcD,EAASgE,IAC1B5F,EAAE8B,QAAO,EAAMF,EAASgE,GAAOC,GAG/BjE,EAASgE,GAAQC,IAOvBC,SAAU,SAASF,EAAMC,GACvB,GAAI7F,EAAE6B,cAAc+D,GAClB5F,EAAE8B,QAAO,EAAMH,EAAQiE,OAEpB,CAAA,GAAGC,IAAU1F,EAIhB,MAAOwB,GAAOiE,EAHdjE,GAAOiE,GAAQC,IAMnB7B,MAAO,YACDpC,EAASmE,QAAUnE,EAASoC,QAC3BpC,EAASV,YACVS,EAAOT,YAAY8E,IAAI5E,YAGvBO,EAAOqC,MAAQ1D,SAAS2F,UAAUjB,KAAKxD,KAAK0E,QAAQC,KAAMD,QAAStE,EAASgE,KAAO,KACnFjE,EAAOqC,MAAMoC,MAAMF,QAAS9E,cAIlCyB,QAAS,YACHjB,EAASmE,QAAUnE,EAASiB,SAAWjB,EAASoC,QAC/CpC,EAASV,YACVS,EAAOT,YAAY8E,IAAI5E,YAGvBO,EAAOkB,QAAUvC,SAAS2F,UAAUjB,KAAKxD,KAAK0E,QAAQC,KAAMD,QAAStE,EAASgE,KAAO,KACrFjE,EAAOkB,QAAQuD,MAAMF,QAAS9E,cAIpCe,MAAO,WACDP,EAASmE,SACXpE,EAAOQ,MAAQ7B,SAAS2F,UAAUjB,KAAKxD,KAAK0E,QAAQ/D,MAAO+D,QAAStE,EAASgE,KAAO,KACpFjE,EAAOQ,MAAMiE,MAAMF,QAAS9E,aAGhCF,aACE8E,IAAK,SAASK,GACZ,GACEC,GACAC,EACAC,CAEC5E,GAASV,cACVoF,GAAgB,GAAItF,OAAOC,UAC3BuF,EAAgBzF,GAAQuF,EACxBC,EAAgBD,EAAcE,EAC9BzF,EAAgBuF,EAChBpF,EAAYuF,MACVC,KAAmBL,EAAQ,GAC3BM,aAAsBpF,MAAMC,KAAK6E,EAAS,IAAM,GAChDO,QAAmBvE,EACnBwE,iBAAmBN,KAGvBO,aAAanF,EAAOT,YAAY6F,OAChCpF,EAAOT,YAAY6F,MAAQC,WAAWrF,EAAOT,YAAY+F,QAAS,MAEpEA,QAAS,WACP,GACEC,GAAQtF,EAASgE,KAAO,IACxBuB,EAAY,CAEdpG,IAAO,EACP+F,aAAanF,EAAOT,YAAY6F,OAChC/G,EAAEyB,KAAKP,EAAa,SAAS0D,EAAOrC,GAClC4E,GAAa5E,EAAK,oBAEpB2E,GAAS,IAAMC,EAAY,KACxBtG,IACDqG,GAAS,KAAQrG,EAAiB,KAEjCF,EAAYmC,OAAS,IACtBoE,GAAS,KAAYvG,EAAYmC,OAAS,MAEvCoD,QAAQkB,QAAUjH,GAAa+F,QAAQmB,QAAUlH,IAAce,EAAY4B,OAAS,IACvFoD,QAAQoB,eAAeJ,GACpBhB,QAAQmB,MACTnB,QAAQmB,MAAMnG,GAGdlB,EAAEyB,KAAKP,EAAa,SAAS0D,EAAOrC,GAClC2D,QAAQF,IAAIzD,EAAW,KAAI,KAAOA,EAAK,kBAAkB,QAG7D2D,QAAQqB,YAEVrG,OAGJsG,OAAQ,SAASrG,EAAOsG,EAAiBC,GACvC,GAEEC,GACAC,EACAC,EAHAC,EAASxF,CAiDX,OA5CAmF,GAAkBA,GAAmBnG,EACrCoG,EAAkBrF,GAAmBqF,EAClB,gBAATvG,IAAqB2G,IAAW3H,IACxCgB,EAAWA,EAAM4G,MAAM,SACvBJ,EAAWxG,EAAM2B,OAAS,EAC1B9C,EAAEyB,KAAKN,EAAO,SAAS6G,EAAOnC,GAC5B,GAAIoC,GAAkBD,GAASL,EAC3B9B,EAAQ1E,EAAM6G,EAAQ,GAAGE,OAAO,GAAGC,cAAgBhH,EAAM6G,EAAQ,GAAGzG,MAAM,GAC1EJ,CAEJ,IAAInB,EAAE6B,cAAeiG,EAAOG,KAAsBD,GAASL,EACzDG,EAASA,EAAOG,OAEb,CAAA,GAAIH,EAAOG,KAAoB9H,EAElC,MADAyH,GAAQE,EAAOG,IACR,CAEJ,KAAIjI,EAAE6B,cAAeiG,EAAOjC,KAAamC,GAASL,EAGlD,MAAIG,GAAOjC,KAAW1F,IACzByH,EAAQE,EAAOjC,IACR,EAJPiC,GAASA,EAAOjC,OAWjB7F,EAAEoI,WAAYR,GACjBC,EAAWD,EAAMxB,MAAMsB,EAASD,GAE1BG,IAAUzH,IAChB0H,EAAWD,GAEV5H,EAAEqI,QAAQ3H,GACXA,EAAc+F,KAAKoB,GAEbnH,IAAkBP,EACxBO,GAAiBA,EAAemH,GAE1BA,IAAa1H,IACnBO,EAAgBmH,GAEXD,IAGRvG,GACEiB,IAAanC,GACdwB,EAAOiB,aAETjB,EAAO6F,OAAOrG,KAGXmB,IAAanC,GACdmC,EAASkF,OAAO,WAElB7F,EAAOiB,gBAKLlC,IAAkBP,EACtBO,EACAE,MAINZ,EAAEO,GAAGC,OAAOoB,UAEVgE,KAAgB,SAChB7D,UAAgB,SAEhBuG,OAAgB,EAChBtE,OAAgB,EAChBnB,SAAgB,EAChB3B,aAAgB,EAEhBoC,cAAgB,EAChBL,aAAgB,EAChBY,UAAgB,EAChBiB,UAAgB,OAEhByD,YAAgB,EAEhB7C,OAAgB,SAASlF,KAEzB2B,OACEqG,OAAY,uCACZC,UAAY,mEAIdxG,UACEzB,OAAY,SACZqD,UAAY,aAGd7B,WACEsD,OAAW,SACXH,SAAW,WACXb,SAAW,WACXoE,QAAW,WAGb5H,UACE6B,KAAO,SAGToB,WACEpB,KAAM,SAASkB,GAKb,IAJA,GACElB,GAAO,EACPmB,EAAO,GAEHnB,GAAQkB,GACZC,GAAQ,uBACRnB,GAEF,OAAOmB,OAMT6E,OAAQ1I,OAAQC","file":"rating.min.js","sourcesContent":["/*!\n * # Semantic UI 2.2.6 - Rating\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.rating = function(parameters) {\n  var\n    $allModules     = $(this),\n    moduleSelector  = $allModules.selector || '',\n\n    time            = new Date().getTime(),\n    performance     = [],\n\n    query           = arguments[0],\n    methodInvoked   = (typeof query == 'string'),\n    queryArguments  = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        settings        = ( $.isPlainObject(parameters) )\n          ? $.extend(true, {}, $.fn.rating.settings, parameters)\n          : $.extend({}, $.fn.rating.settings),\n\n        namespace       = settings.namespace,\n        className       = settings.className,\n        metadata        = settings.metadata,\n        selector        = settings.selector,\n        error           = settings.error,\n\n        eventNamespace  = '.' + namespace,\n        moduleNamespace = 'module-' + namespace,\n\n        element         = this,\n        instance        = $(this).data(moduleNamespace),\n\n        $module         = $(this),\n        $icon           = $module.find(selector.icon),\n\n        initialLoad,\n        module\n      ;\n\n      module = {\n\n        initialize: function() {\n          module.verbose('Initializing rating module', settings);\n\n          if($icon.length === 0) {\n            module.setup.layout();\n          }\n\n          if(settings.interactive) {\n            module.enable();\n          }\n          else {\n            module.disable();\n          }\n          module.set.initialLoad();\n          module.set.rating( module.get.initialRating() );\n          module.remove.initialLoad();\n          module.instantiate();\n        },\n\n        instantiate: function() {\n          module.verbose('Instantiating module', settings);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous instance', instance);\n          module.remove.events();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          $icon   = $module.find(selector.icon);\n        },\n\n        setup: {\n          layout: function() {\n            var\n              maxRating = module.get.maxRating(),\n              html      = $.fn.rating.settings.templates.icon(maxRating)\n            ;\n            module.debug('Generating icon html dynamically');\n            $module\n              .html(html)\n            ;\n            module.refresh();\n          }\n        },\n\n        event: {\n          mouseenter: function() {\n            var\n              $activeIcon = $(this)\n            ;\n            $activeIcon\n              .nextAll()\n                .removeClass(className.selected)\n            ;\n            $module\n              .addClass(className.selected)\n            ;\n            $activeIcon\n              .addClass(className.selected)\n                .prevAll()\n                .addClass(className.selected)\n            ;\n          },\n          mouseleave: function() {\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n            ;\n          },\n          click: function() {\n            var\n              $activeIcon   = $(this),\n              currentRating = module.get.rating(),\n              rating        = $icon.index($activeIcon) + 1,\n              canClear      = (settings.clearable == 'auto')\n               ? ($icon.length === 1)\n               : settings.clearable\n            ;\n            if(canClear && currentRating == rating) {\n              module.clearRating();\n            }\n            else {\n              module.set.rating( rating );\n            }\n          }\n        },\n\n        clearRating: function() {\n          module.debug('Clearing current rating');\n          module.set.rating(0);\n        },\n\n        bind: {\n          events: function() {\n            module.verbose('Binding events');\n            $module\n              .on('mouseenter' + eventNamespace, selector.icon, module.event.mouseenter)\n              .on('mouseleave' + eventNamespace, selector.icon, module.event.mouseleave)\n              .on('click'      + eventNamespace, selector.icon, module.event.click)\n            ;\n          }\n        },\n\n        remove: {\n          events: function() {\n            module.verbose('Removing events');\n            $module\n              .off(eventNamespace)\n            ;\n          },\n          initialLoad: function() {\n            initialLoad = false;\n          }\n        },\n\n        enable: function() {\n          module.debug('Setting rating to interactive mode');\n          module.bind.events();\n          $module\n            .removeClass(className.disabled)\n          ;\n        },\n\n        disable: function() {\n          module.debug('Setting rating to read-only mode');\n          module.remove.events();\n          $module\n            .addClass(className.disabled)\n          ;\n        },\n\n        is: {\n          initialLoad: function() {\n            return initialLoad;\n          }\n        },\n\n        get: {\n          initialRating: function() {\n            if($module.data(metadata.rating) !== undefined) {\n              $module.removeData(metadata.rating);\n              return $module.data(metadata.rating);\n            }\n            return settings.initialRating;\n          },\n          maxRating: function() {\n            if($module.data(metadata.maxRating) !== undefined) {\n              $module.removeData(metadata.maxRating);\n              return $module.data(metadata.maxRating);\n            }\n            return settings.maxRating;\n          },\n          rating: function() {\n            var\n              currentRating = $icon.filter('.' + className.active).length\n            ;\n            module.verbose('Current rating retrieved', currentRating);\n            return currentRating;\n          }\n        },\n\n        set: {\n          rating: function(rating) {\n            var\n              ratingIndex = (rating - 1 >= 0)\n                ? (rating - 1)\n                : 0,\n              $activeIcon = $icon.eq(ratingIndex)\n            ;\n            $module\n              .removeClass(className.selected)\n            ;\n            $icon\n              .removeClass(className.selected)\n              .removeClass(className.active)\n            ;\n            if(rating > 0) {\n              module.verbose('Setting current rating to', rating);\n              $activeIcon\n                .prevAll()\n                .addBack()\n                  .addClass(className.active)\n              ;\n            }\n            if(!module.is.initialLoad()) {\n              settings.onRate.call(element, rating);\n            }\n          },\n          initialLoad: function() {\n            initialLoad = true;\n          }\n        },\n\n        setting: function(name, value) {\n          module.debug('Changing setting', name, value);\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            if($.isPlainObject(settings[name])) {\n              $.extend(true, settings[name], value);\n            }\n            else {\n              settings[name] = value;\n            }\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if ( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      if(methodInvoked) {\n        if(instance === undefined) {\n          module.initialize();\n        }\n        module.invoke(query);\n      }\n      else {\n        if(instance !== undefined) {\n          instance.invoke('destroy');\n        }\n        module.initialize();\n      }\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.rating.settings = {\n\n  name          : 'Rating',\n  namespace     : 'rating',\n\n  slent         : false,\n  debug         : false,\n  verbose       : false,\n  performance   : true,\n\n  initialRating : 0,\n  interactive   : true,\n  maxRating     : 4,\n  clearable     : 'auto',\n\n  fireOnInit    : false,\n\n  onRate        : function(rating){},\n\n  error         : {\n    method    : 'The method you called is not defined',\n    noMaximum : 'No maximum rating specified. Cannot generate HTML automatically'\n  },\n\n\n  metadata: {\n    rating    : 'rating',\n    maxRating : 'maxRating'\n  },\n\n  className : {\n    active   : 'active',\n    disabled : 'disabled',\n    selected : 'selected',\n    loading  : 'loading'\n  },\n\n  selector  : {\n    icon : '.icon'\n  },\n\n  templates: {\n    icon: function(maxRating) {\n      var\n        icon = 1,\n        html = ''\n      ;\n      while(icon <= maxRating) {\n        html += '<i class=\"icon\"></i>';\n        icon++;\n      }\n      return html;\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n"]}