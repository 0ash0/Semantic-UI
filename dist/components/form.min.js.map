{"version":3,"sources":["form.js"],"names":["$","window","document","undefined","Math","self","Function","fn","form","parameters","returnedValue","$allModules","this","moduleSelector","selector","time","Date","getTime","performance","query","arguments","legacyParameters","methodInvoked","queryArguments","slice","call","each","$field","$group","$message","$prompt","$submit","$clear","$reset","settings","validation","metadata","className","error","namespace","moduleNamespace","eventNamespace","instance","module","$module","element","formErrors","keyHeldDown","initialize","get","instantiate","invoke","verbose","bindEvents","set","defaults","data","destroy","removeEvents","removeData","refresh","find","field","group","message","prompt","submit","clear","reset","attachEvents","action","on","event","preventDefault","validate","blur","keyboardShortcuts","keydown","$input","type","prop","inputEvent","changeEvent","change","$element","parent","$fieldGroup","closest","defaultValue","isCheckbox","is","uiCheckbox","isDropdown","uiDropdown","isErrored","hasClass","removeClass","remove","dropdown","val","bracketedRule","rule","match","regExp","bracket","empty","length","blank","trim","valid","allValid","fieldName","off","key","which","isInput","input","checkbox","isInDropdown","keyCode","enter","escape","ctrlKey","one","keyup","debug","validationRules","revalidate","clearTimeout","timer","setTimeout","delay","ancillaryValue","value","ruleName","replace","createElement","oninput","onpropertychange","$label","name","ancillary","text","unspecifiedRule","requiresValue","search","requiresName","identifier","eq","unspecifiedField","isPlainObject","ruleKeys","keys","Object","isLegacySettings","rules","extend","oldSyntax","fields","isArray","index","push","filter","$fields","add","fieldValidation","results","values","isRadio","radio","isMultiple","indexOf","isChecked","has","errors","children","promptExists","addClass","inline","templates","appendTo","html","transition","duration","fadeIn","fadeOut","success","isEmptyObject","$multipleField","fieldExists","ignoreCallbacks","onSuccess","stopImmediatePropagation","onFailure","$dependsField","depends","fieldValid","fieldErrors","optional","onValid","concat","onInvalid","ruleFunction","isFunction","noRule","setting","internal","silent","log","prototype","bind","console","info","apply","currentTime","executionTime","previousTime","Name","Arguments","Element","Execution Time","display","title","totalTime","table","groupCollapsed","groupEnd","passedArguments","context","maxDepth","found","response","object","split","depth","camelCaseValue","charAt","toUpperCase","decimal","email","flags","integer","number","url","checked","isExactly","not","notExactly","contain","containExactly","doesntContain","doesntContainExactly","minLength","exactLength","maxLength","different","creditCard","minCount","exactCount","maxCount","label","pressed","method","test","RegExp","regExpParts","range","min","max","parts","intRegExp","toLowerCase","notValue","contains","containsExactly","requiredLength","matchingValue","toString","cardNumber","cardTypes","unionPay","cards","visa","pattern","amex","mastercard","discover","jcb","maestro","dinersClub","laser","visaElectron","validCard","requiredTypes","inArray","multiple","producedValue","sum","parseInt","jQuery"],"mappings":"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","file":"form.min.js","sourcesContent":["/*!\n * # Semantic UI 2.2.6 - Form Validation\n * http://github.com/semantic-org/semantic-ui/\n *\n *\n * Released under the MIT license\n * http://opensource.org/licenses/MIT\n *\n */\n\n;(function ($, window, document, undefined) {\n\n\"use strict\";\n\nwindow = (typeof window != 'undefined' && window.Math == Math)\n  ? window\n  : (typeof self != 'undefined' && self.Math == Math)\n    ? self\n    : Function('return this')()\n;\n\n$.fn.form = function(parameters) {\n  var\n    $allModules      = $(this),\n    moduleSelector   = $allModules.selector || '',\n\n    time             = new Date().getTime(),\n    performance      = [],\n\n    query            = arguments[0],\n    legacyParameters = arguments[1],\n    methodInvoked    = (typeof query == 'string'),\n    queryArguments   = [].slice.call(arguments, 1),\n    returnedValue\n  ;\n  $allModules\n    .each(function() {\n      var\n        $module     = $(this),\n        element     = this,\n\n        formErrors  = [],\n        keyHeldDown = false,\n\n        // set at run-time\n        $field,\n        $group,\n        $message,\n        $prompt,\n        $submit,\n        $clear,\n        $reset,\n\n        settings,\n        validation,\n\n        metadata,\n        selector,\n        className,\n        error,\n\n        namespace,\n        moduleNamespace,\n        eventNamespace,\n\n        instance,\n        module\n      ;\n\n      module      = {\n\n        initialize: function() {\n\n          // settings grabbed at run time\n          module.get.settings();\n          if(methodInvoked) {\n            if(instance === undefined) {\n              module.instantiate();\n            }\n            module.invoke(query);\n          }\n          else {\n            if(instance !== undefined) {\n              instance.invoke('destroy');\n            }\n            module.verbose('Initializing form validation', $module, settings);\n            module.bindEvents();\n            module.set.defaults();\n            module.instantiate();\n          }\n        },\n\n        instantiate: function() {\n          module.verbose('Storing instance of module', module);\n          instance = module;\n          $module\n            .data(moduleNamespace, module)\n          ;\n        },\n\n        destroy: function() {\n          module.verbose('Destroying previous module', instance);\n          module.removeEvents();\n          $module\n            .removeData(moduleNamespace)\n          ;\n        },\n\n        refresh: function() {\n          module.verbose('Refreshing selector cache');\n          $field      = $module.find(selector.field);\n          $group      = $module.find(selector.group);\n          $message    = $module.find(selector.message);\n          $prompt     = $module.find(selector.prompt);\n\n          $submit     = $module.find(selector.submit);\n          $clear      = $module.find(selector.clear);\n          $reset      = $module.find(selector.reset);\n        },\n\n        submit: function() {\n          module.verbose('Submitting form', $module);\n          $module\n            .submit()\n          ;\n        },\n\n        attachEvents: function(selector, action) {\n          action = action || 'submit';\n          $(selector)\n            .on('click' + eventNamespace, function(event) {\n              module[action]();\n              event.preventDefault();\n            })\n          ;\n        },\n\n        bindEvents: function() {\n          module.verbose('Attaching form events');\n          $module\n            .on('submit' + eventNamespace, module.validate.form)\n            .on('blur'   + eventNamespace, selector.field, module.event.field.blur)\n            .on('click'  + eventNamespace, selector.submit, module.submit)\n            .on('click'  + eventNamespace, selector.reset, module.reset)\n            .on('click'  + eventNamespace, selector.clear, module.clear)\n          ;\n          if(settings.keyboardShortcuts) {\n            $module\n              .on('keydown' + eventNamespace, selector.field, module.event.field.keydown)\n            ;\n          }\n          $field\n            .each(function() {\n              var\n                $input     = $(this),\n                type       = $input.prop('type'),\n                inputEvent = module.get.changeEvent(type, $input)\n              ;\n              $(this)\n                .on(inputEvent + eventNamespace, module.event.field.change)\n              ;\n            })\n          ;\n        },\n\n        clear: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue) || '',\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('clear');\n              }\n              else if(isCheckbox) {\n                $field.prop('checked', false);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val('');\n              }\n            })\n          ;\n        },\n\n        reset: function() {\n          $field\n            .each(function () {\n              var\n                $field       = $(this),\n                $element     = $field.parent(),\n                $fieldGroup  = $field.closest($group),\n                $prompt      = $fieldGroup.find(selector.prompt),\n                defaultValue = $field.data(metadata.defaultValue),\n                isCheckbox   = $element.is(selector.uiCheckbox),\n                isDropdown   = $element.is(selector.uiDropdown),\n                isErrored    = $fieldGroup.hasClass(className.error)\n              ;\n              if(defaultValue === undefined) {\n                return;\n              }\n              if(isErrored) {\n                module.verbose('Resetting error on field', $fieldGroup);\n                $fieldGroup.removeClass(className.error);\n                $prompt.remove();\n              }\n              if(isDropdown) {\n                module.verbose('Resetting dropdown value', $element, defaultValue);\n                $element.dropdown('restore defaults');\n              }\n              else if(isCheckbox) {\n                module.verbose('Resetting checkbox value', $element, defaultValue);\n                $field.prop('checked', defaultValue);\n              }\n              else {\n                module.verbose('Resetting field value', $field, defaultValue);\n                $field.val(defaultValue);\n              }\n            })\n          ;\n        },\n\n        is: {\n          bracketedRule: function(rule) {\n            return (rule.type && rule.type.match(settings.regExp.bracket));\n          },\n          empty: function($field) {\n            if(!$field || $field.length === 0) {\n              return true;\n            }\n            else if($field.is('input[type=\"checkbox\"]')) {\n              return !$field.is(':checked');\n            }\n            else {\n              return module.is.blank($field);\n            }\n          },\n          blank: function($field) {\n            return $.trim($field.val()) === '';\n          },\n          valid: function() {\n            var\n              allValid = true\n            ;\n            module.verbose('Checking if form is valid');\n            $.each(validation, function(fieldName, field) {\n              if( !( module.validate.field(field, fieldName) ) ) {\n                allValid = false;\n              }\n            });\n            return allValid;\n          }\n        },\n\n        removeEvents: function() {\n          $module\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n          $submit\n            .off(eventNamespace)\n          ;\n          $field\n            .off(eventNamespace)\n          ;\n        },\n\n        event: {\n          field: {\n            keydown: function(event) {\n              var\n                $field       = $(this),\n                key          = event.which,\n                isInput      = $field.is(selector.input),\n                isCheckbox   = $field.is(selector.checkbox),\n                isInDropdown = ($field.closest(selector.uiDropdown).length > 0),\n                keyCode      = {\n                  enter  : 13,\n                  escape : 27\n                }\n              ;\n              if( key == keyCode.escape) {\n                module.verbose('Escape key pressed blurring field');\n                $field\n                  .blur()\n                ;\n              }\n              if(!event.ctrlKey && key == keyCode.enter && isInput && !isInDropdown && !isCheckbox) {\n                if(!keyHeldDown) {\n                  $field\n                    .one('keyup' + eventNamespace, module.event.field.keyup)\n                  ;\n                  module.submit();\n                  module.debug('Enter pressed on input submitting form');\n                }\n                keyHeldDown = true;\n              }\n            },\n            keyup: function() {\n              keyHeldDown = false;\n            },\n            blur: function(event) {\n              var\n                $field          = $(this),\n                $fieldGroup     = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if( $fieldGroup.hasClass(className.error) ) {\n                module.debug('Revalidating field', $field, validationRules);\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n              else if(settings.on == 'blur' || settings.on == 'change') {\n                if(validationRules) {\n                  module.validate.field( validationRules );\n                }\n              }\n            },\n            change: function(event) {\n              var\n                $field      = $(this),\n                $fieldGroup = $field.closest($group),\n                validationRules = module.get.validation($field)\n              ;\n              if(settings.on == 'change' || ( $fieldGroup.hasClass(className.error) && settings.revalidate) ) {\n                clearTimeout(module.timer);\n                module.timer = setTimeout(function() {\n                  module.debug('Revalidating field', $field,  module.get.validation($field));\n                  module.validate.field( validationRules );\n                }, settings.delay);\n              }\n            }\n          }\n\n        },\n\n        get: {\n          ancillaryValue: function(rule) {\n            if(!rule.type || (!rule.value && !module.is.bracketedRule(rule))) {\n              return false;\n            }\n            return (rule.value !== undefined)\n              ? rule.value\n              : rule.type.match(settings.regExp.bracket)[1] + ''\n            ;\n          },\n          ruleName: function(rule) {\n            if( module.is.bracketedRule(rule) ) {\n              return rule.type.replace(rule.type.match(settings.regExp.bracket)[0], '');\n            }\n            return rule.type;\n          },\n          changeEvent: function(type, $input) {\n            if(type == 'checkbox' || type == 'radio' || type == 'hidden' || $input.is('select')) {\n              return 'change';\n            }\n            else {\n              return module.get.inputEvent();\n            }\n          },\n          inputEvent: function() {\n            return (document.createElement('input').oninput !== undefined)\n              ? 'input'\n              : (document.createElement('input').onpropertychange !== undefined)\n                ? 'propertychange'\n                : 'keyup'\n            ;\n          },\n          prompt: function(rule, field) {\n            var\n              ruleName      = module.get.ruleName(rule),\n              ancillary     = module.get.ancillaryValue(rule),\n              prompt        = rule.prompt || settings.prompt[ruleName] || settings.text.unspecifiedRule,\n              requiresValue = (prompt.search('{value}') !== -1),\n              requiresName  = (prompt.search('{name}') !== -1),\n              $label,\n              $field,\n              name\n            ;\n            if(requiresName || requiresValue) {\n              $field = module.get.field(field.identifier);\n            }\n            if(requiresValue) {\n              prompt = prompt.replace('{value}', $field.val());\n            }\n            if(requiresName) {\n              $label = $field.closest(selector.group).find('label').eq(0);\n              name = ($label.length == 1)\n                ? $label.text()\n                : $field.prop('placeholder') || settings.text.unspecifiedField\n              ;\n              prompt = prompt.replace('{name}', name);\n            }\n            prompt = prompt.replace('{identifier}', field.identifier);\n            prompt = prompt.replace('{ruleValue}', ancillary);\n            if(!rule.prompt) {\n              module.verbose('Using default validation prompt for type', prompt, ruleName);\n            }\n            return prompt;\n          },\n          settings: function() {\n            if($.isPlainObject(parameters)) {\n              var\n                keys     = Object.keys(parameters),\n                isLegacySettings = (keys.length > 0)\n                  ? (parameters[keys[0]].identifier !== undefined && parameters[keys[0]].rules !== undefined)\n                  : false,\n                ruleKeys\n              ;\n              if(isLegacySettings) {\n                // 1.x (ducktyped)\n                settings   = $.extend(true, {}, $.fn.form.settings, legacyParameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, parameters);\n                module.error(settings.error.oldSyntax, element);\n                module.verbose('Extending settings from legacy parameters', validation, settings);\n              }\n              else {\n                // 2.x\n                if(parameters.fields) {\n                  ruleKeys = Object.keys(parameters.fields);\n                  if( typeof parameters.fields[ruleKeys[0]] == 'string' || $.isArray(parameters.fields[ruleKeys[0]]) ) {\n                    $.each(parameters.fields, function(name, rules) {\n                      if(typeof rules == 'string') {\n                        rules = [rules];\n                      }\n                      parameters.fields[name] = {\n                        rules: []\n                      };\n                      $.each(rules, function(index, rule) {\n                        parameters.fields[name].rules.push({ type: rule });\n                      });\n                    });\n                  }\n                }\n\n                settings   = $.extend(true, {}, $.fn.form.settings, parameters);\n                validation = $.extend({}, $.fn.form.settings.defaults, settings.fields);\n                module.verbose('Extending settings', validation, settings);\n              }\n            }\n            else {\n              settings   = $.fn.form.settings;\n              validation = $.fn.form.settings.defaults;\n              module.verbose('Using default form validation', validation, settings);\n            }\n\n            // shorthand\n            namespace       = settings.namespace;\n            metadata        = settings.metadata;\n            selector        = settings.selector;\n            className       = settings.className;\n            error           = settings.error;\n            moduleNamespace = 'module-' + namespace;\n            eventNamespace  = '.' + namespace;\n\n            // grab instance\n            instance = $module.data(moduleNamespace);\n\n            // refresh selector cache\n            module.refresh();\n          },\n          field: function(identifier) {\n            module.verbose('Finding field with identifier', identifier);\n            if( $field.filter('#' + identifier).length > 0 ) {\n              return $field.filter('#' + identifier);\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'\"]');\n            }\n            else if( $field.filter('[name=\"' + identifier +'[]\"]').length > 0 ) {\n              return $field.filter('[name=\"' + identifier +'[]\"]');\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]');\n            }\n            return $('<input/>');\n          },\n          fields: function(fields) {\n            var\n              $fields = $()\n            ;\n            $.each(fields, function(index, name) {\n              $fields = $fields.add( module.get.field(name) );\n            });\n            return $fields;\n          },\n          validation: function($field) {\n            var\n              fieldValidation,\n              identifier\n            ;\n            if(!validation) {\n              return false;\n            }\n            $.each(validation, function(fieldName, field) {\n              identifier = field.identifier || fieldName;\n              if( module.get.field(identifier)[0] == $field[0] ) {\n                field.identifier = identifier;\n                fieldValidation = field;\n              }\n            });\n            return fieldValidation || false;\n          },\n          value: function (field) {\n            var\n              fields = [],\n              results\n            ;\n            fields.push(field);\n            results = module.get.values.call(element, fields);\n            return results[field];\n          },\n          values: function (fields) {\n            var\n              $fields = $.isArray(fields)\n                ? module.get.fields(fields)\n                : $field,\n              values = {}\n            ;\n            $fields.each(function(index, field) {\n              var\n                $field     = $(field),\n                type       = $field.prop('type'),\n                name       = $field.prop('name'),\n                value      = $field.val(),\n                isCheckbox = $field.is(selector.checkbox),\n                isRadio    = $field.is(selector.radio),\n                isMultiple = (name.indexOf('[]') !== -1),\n                isChecked  = (isCheckbox)\n                  ? $field.is(':checked')\n                  : false\n              ;\n              if(name) {\n                if(isMultiple) {\n                  name = name.replace('[]', '');\n                  if(!values[name]) {\n                    values[name] = [];\n                  }\n                  if(isCheckbox) {\n                    if(isChecked) {\n                      values[name].push(value || true);\n                    }\n                    else {\n                      values[name].push(false);\n                    }\n                  }\n                  else {\n                    values[name].push(value);\n                  }\n                }\n                else {\n                  if(isRadio) {\n                    if(isChecked) {\n                      values[name] = value;\n                    }\n                  }\n                  else if(isCheckbox) {\n                    if(isChecked) {\n                      values[name] = value || true;\n                    }\n                    else {\n                      values[name] = false;\n                    }\n                  }\n                  else {\n                    values[name] = value;\n                  }\n                }\n              }\n            });\n            return values;\n          }\n        },\n\n        has: {\n\n          field: function(identifier) {\n            module.verbose('Checking for existence of a field with identifier', identifier);\n            if(typeof identifier !== 'string') {\n              module.error(error.identifier, identifier);\n            }\n            if( $field.filter('#' + identifier).length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[name=\"' + identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            else if( $field.filter('[data-' + metadata.validate + '=\"'+ identifier +'\"]').length > 0 ) {\n              return true;\n            }\n            return false;\n          }\n\n        },\n\n        add: {\n          prompt: function(identifier, errors) {\n            var\n              $field       = module.get.field(identifier),\n              $fieldGroup  = $field.closest($group),\n              $prompt      = $fieldGroup.children(selector.prompt),\n              promptExists = ($prompt.length !== 0)\n            ;\n            errors = (typeof errors == 'string')\n              ? [errors]\n              : errors\n            ;\n            module.verbose('Adding field error state', identifier);\n            $fieldGroup\n              .addClass(className.error)\n            ;\n            if(settings.inline) {\n              if(!promptExists) {\n                $prompt = settings.templates.prompt(errors);\n                $prompt\n                  .appendTo($fieldGroup)\n                ;\n              }\n              $prompt\n                .html(errors[0])\n              ;\n              if(!promptExists) {\n                if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                  module.verbose('Displaying error with css transition', settings.transition);\n                  $prompt.transition(settings.transition + ' in', settings.duration);\n                }\n                else {\n                  module.verbose('Displaying error with fallback javascript animation');\n                  $prompt\n                    .fadeIn(settings.duration)\n                  ;\n                }\n              }\n              else {\n                module.verbose('Inline errors are disabled, no inline error added', identifier);\n              }\n            }\n          },\n          errors: function(errors) {\n            module.debug('Adding form error messages', errors);\n            module.set.error();\n            $message\n              .html( settings.templates.error(errors) )\n            ;\n          }\n        },\n\n        remove: {\n          prompt: function(identifier) {\n            var\n              $field      = module.get.field(identifier),\n              $fieldGroup = $field.closest($group),\n              $prompt     = $fieldGroup.children(selector.prompt)\n            ;\n            $fieldGroup\n              .removeClass(className.error)\n            ;\n            if(settings.inline && $prompt.is(':visible')) {\n              module.verbose('Removing prompt for field', identifier);\n              if(settings.transition && $.fn.transition !== undefined && $module.transition('is supported')) {\n                $prompt.transition(settings.transition + ' out', settings.duration, function() {\n                  $prompt.remove();\n                });\n              }\n              else {\n                $prompt\n                  .fadeOut(settings.duration, function(){\n                    $prompt.remove();\n                  })\n                ;\n              }\n            }\n          }\n        },\n\n        set: {\n          success: function() {\n            $module\n              .removeClass(className.error)\n              .addClass(className.success)\n            ;\n          },\n          defaults: function () {\n            $field\n              .each(function () {\n                var\n                  $field     = $(this),\n                  isCheckbox = ($field.filter(selector.checkbox).length > 0),\n                  value      = (isCheckbox)\n                    ? $field.is(':checked')\n                    : $field.val()\n                ;\n                $field.data(metadata.defaultValue, value);\n              })\n            ;\n          },\n          error: function() {\n            $module\n              .removeClass(className.success)\n              .addClass(className.error)\n            ;\n          },\n          value: function (field, value) {\n            var\n              fields = {}\n            ;\n            fields[field] = value;\n            return module.set.values.call(element, fields);\n          },\n          values: function (fields) {\n            if($.isEmptyObject(fields)) {\n              return;\n            }\n            $.each(fields, function(key, value) {\n              var\n                $field      = module.get.field(key),\n                $element    = $field.parent(),\n                isMultiple  = $.isArray(value),\n                isCheckbox  = $element.is(selector.uiCheckbox),\n                isDropdown  = $element.is(selector.uiDropdown),\n                isRadio     = ($field.is(selector.radio) && isCheckbox),\n                fieldExists = ($field.length > 0),\n                $multipleField\n              ;\n              if(fieldExists) {\n                if(isMultiple && isCheckbox) {\n                  module.verbose('Selecting multiple', value, $field);\n                  $element.checkbox('uncheck');\n                  $.each(value, function(index, value) {\n                    $multipleField = $field.filter('[value=\"' + value + '\"]');\n                    $element       = $multipleField.parent();\n                    if($multipleField.length > 0) {\n                      $element.checkbox('check');\n                    }\n                  });\n                }\n                else if(isRadio) {\n                  module.verbose('Selecting radio value', value, $field);\n                  $field.filter('[value=\"' + value + '\"]')\n                    .parent(selector.uiCheckbox)\n                      .checkbox('check')\n                  ;\n                }\n                else if(isCheckbox) {\n                  module.verbose('Setting checkbox value', value, $element);\n                  if(value === true) {\n                    $element.checkbox('check');\n                  }\n                  else {\n                    $element.checkbox('uncheck');\n                  }\n                }\n                else if(isDropdown) {\n                  module.verbose('Setting dropdown value', value, $element);\n                  $element.dropdown('set selected', value);\n                }\n                else {\n                  module.verbose('Setting field value', value, $field);\n                  $field.val(value);\n                }\n              }\n            });\n          }\n        },\n\n        validate: {\n\n          form: function(event, ignoreCallbacks) {\n            var\n              values = module.get.values(),\n              apiRequest\n            ;\n\n            // input keydown event will fire submit repeatedly by browser default\n            if(keyHeldDown) {\n              return false;\n            }\n\n            // reset errors\n            formErrors = [];\n            if( module.is.valid() ) {\n              module.debug('Form has no validation errors, submitting');\n              module.set.success();\n              if(ignoreCallbacks !== true) {\n                return settings.onSuccess.call(element, event, values);\n              }\n            }\n            else {\n              module.debug('Form has errors');\n              module.set.error();\n              if(!settings.inline) {\n                module.add.errors(formErrors);\n              }\n              // prevent ajax submit\n              if($module.data('moduleApi') !== undefined) {\n                event.stopImmediatePropagation();\n              }\n              if(ignoreCallbacks !== true) {\n                return settings.onFailure.call(element, formErrors, values);\n              }\n            }\n          },\n\n          // takes a validation object and returns whether field passes validation\n          field: function(field, fieldName) {\n            var\n              identifier    = field.identifier || fieldName,\n              $field        = module.get.field(identifier),\n              $dependsField = (field.depends)\n                ? module.get.field(field.depends)\n                : false,\n              fieldValid  = true,\n              fieldErrors = []\n            ;\n            if(!field.identifier) {\n              module.debug('Using field name as identifier', identifier);\n              field.identifier = identifier;\n            }\n            if($field.prop('disabled')) {\n              module.debug('Field is disabled. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.optional && module.is.blank($field)){\n              module.debug('Field is optional and blank. Skipping', identifier);\n              fieldValid = true;\n            }\n            else if(field.depends && module.is.empty($dependsField)) {\n              module.debug('Field depends on another value that is not present or empty. Skipping', $dependsField);\n              fieldValid = true;\n            }\n            else if(field.rules !== undefined) {\n              $.each(field.rules, function(index, rule) {\n                if( module.has.field(identifier) && !( module.validate.rule(field, rule) ) ) {\n                  module.debug('Field is invalid', identifier, rule.type);\n                  fieldErrors.push(module.get.prompt(rule, field));\n                  fieldValid = false;\n                }\n              });\n            }\n            if(fieldValid) {\n              module.remove.prompt(identifier, fieldErrors);\n              settings.onValid.call($field);\n            }\n            else {\n              formErrors = formErrors.concat(fieldErrors);\n              module.add.prompt(identifier, fieldErrors);\n              settings.onInvalid.call($field, fieldErrors);\n              return false;\n            }\n            return true;\n          },\n\n          // takes validation rule and returns whether field passes rule\n          rule: function(field, rule) {\n            var\n              $field       = module.get.field(field.identifier),\n              type         = rule.type,\n              value        = $field.val(),\n              isValid      = true,\n              ancillary    = module.get.ancillaryValue(rule),\n              ruleName     = module.get.ruleName(rule),\n              ruleFunction = settings.rules[ruleName]\n            ;\n            if( !$.isFunction(ruleFunction) ) {\n              module.error(error.noRule, ruleName);\n              return;\n            }\n            // cast to string avoiding encoding special values\n            value = (value === undefined || value === '' || value === null)\n              ? ''\n              : $.trim(value + '')\n            ;\n            return ruleFunction.call($field, value, ancillary);\n          }\n        },\n\n        setting: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, settings, name);\n          }\n          else if(value !== undefined) {\n            settings[name] = value;\n          }\n          else {\n            return settings[name];\n          }\n        },\n        internal: function(name, value) {\n          if( $.isPlainObject(name) ) {\n            $.extend(true, module, name);\n          }\n          else if(value !== undefined) {\n            module[name] = value;\n          }\n          else {\n            return module[name];\n          }\n        },\n        debug: function() {\n          if(!settings.silent && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.debug = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.debug.apply(console, arguments);\n            }\n          }\n        },\n        verbose: function() {\n          if(!settings.silent && settings.verbose && settings.debug) {\n            if(settings.performance) {\n              module.performance.log(arguments);\n            }\n            else {\n              module.verbose = Function.prototype.bind.call(console.info, console, settings.name + ':');\n              module.verbose.apply(console, arguments);\n            }\n          }\n        },\n        error: function() {\n          if(!settings.silent) {\n            module.error = Function.prototype.bind.call(console.error, console, settings.name + ':');\n            module.error.apply(console, arguments);\n          }\n        },\n        performance: {\n          log: function(message) {\n            var\n              currentTime,\n              executionTime,\n              previousTime\n            ;\n            if(settings.performance) {\n              currentTime   = new Date().getTime();\n              previousTime  = time || currentTime;\n              executionTime = currentTime - previousTime;\n              time          = currentTime;\n              performance.push({\n                'Name'           : message[0],\n                'Arguments'      : [].slice.call(message, 1) || '',\n                'Element'        : element,\n                'Execution Time' : executionTime\n              });\n            }\n            clearTimeout(module.performance.timer);\n            module.performance.timer = setTimeout(module.performance.display, 500);\n          },\n          display: function() {\n            var\n              title = settings.name + ':',\n              totalTime = 0\n            ;\n            time = false;\n            clearTimeout(module.performance.timer);\n            $.each(performance, function(index, data) {\n              totalTime += data['Execution Time'];\n            });\n            title += ' ' + totalTime + 'ms';\n            if(moduleSelector) {\n              title += ' \\'' + moduleSelector + '\\'';\n            }\n            if($allModules.length > 1) {\n              title += ' ' + '(' + $allModules.length + ')';\n            }\n            if( (console.group !== undefined || console.table !== undefined) && performance.length > 0) {\n              console.groupCollapsed(title);\n              if(console.table) {\n                console.table(performance);\n              }\n              else {\n                $.each(performance, function(index, data) {\n                  console.log(data['Name'] + ': ' + data['Execution Time']+'ms');\n                });\n              }\n              console.groupEnd();\n            }\n            performance = [];\n          }\n        },\n        invoke: function(query, passedArguments, context) {\n          var\n            object = instance,\n            maxDepth,\n            found,\n            response\n          ;\n          passedArguments = passedArguments || queryArguments;\n          context         = element         || context;\n          if(typeof query == 'string' && object !== undefined) {\n            query    = query.split(/[\\. ]/);\n            maxDepth = query.length - 1;\n            $.each(query, function(depth, value) {\n              var camelCaseValue = (depth != maxDepth)\n                ? value + query[depth + 1].charAt(0).toUpperCase() + query[depth + 1].slice(1)\n                : query\n              ;\n              if( $.isPlainObject( object[camelCaseValue] ) && (depth != maxDepth) ) {\n                object = object[camelCaseValue];\n              }\n              else if( object[camelCaseValue] !== undefined ) {\n                found = object[camelCaseValue];\n                return false;\n              }\n              else if( $.isPlainObject( object[value] ) && (depth != maxDepth) ) {\n                object = object[value];\n              }\n              else if( object[value] !== undefined ) {\n                found = object[value];\n                return false;\n              }\n              else {\n                return false;\n              }\n            });\n          }\n          if( $.isFunction( found ) ) {\n            response = found.apply(context, passedArguments);\n          }\n          else if(found !== undefined) {\n            response = found;\n          }\n          if($.isArray(returnedValue)) {\n            returnedValue.push(response);\n          }\n          else if(returnedValue !== undefined) {\n            returnedValue = [returnedValue, response];\n          }\n          else if(response !== undefined) {\n            returnedValue = response;\n          }\n          return found;\n        }\n      };\n      module.initialize();\n    })\n  ;\n\n  return (returnedValue !== undefined)\n    ? returnedValue\n    : this\n  ;\n};\n\n$.fn.form.settings = {\n\n  name              : 'Form',\n  namespace         : 'form',\n\n  debug             : false,\n  verbose           : false,\n  performance       : true,\n\n  fields            : false,\n\n  keyboardShortcuts : true,\n  on                : 'submit',\n  inline            : false,\n\n  delay             : 200,\n  revalidate        : true,\n\n  transition        : 'scale',\n  duration          : 200,\n\n  onValid           : function() {},\n  onInvalid         : function() {},\n  onSuccess         : function() { return true; },\n  onFailure         : function() { return false; },\n\n  metadata : {\n    defaultValue : 'default',\n    validate     : 'validate'\n  },\n\n  regExp: {\n    bracket : /\\[(.*)\\]/i,\n    decimal : /^\\d*(\\.)\\d+/,\n    email   : /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,\n    escape  : /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n    flags   : /^\\/(.*)\\/(.*)?/,\n    integer : /^\\-?\\d+$/,\n    number  : /^\\-?\\d*(\\.\\d+)?$/,\n    url     : /(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/i\n  },\n\n  text: {\n    unspecifiedRule  : 'Please enter a valid value',\n    unspecifiedField : 'This field'\n  },\n\n  prompt: {\n    empty                : '{name} must have a value',\n    checked              : '{name} must be checked',\n    email                : '{name} must be a valid e-mail',\n    url                  : '{name} must be a valid url',\n    regExp               : '{name} is not formatted correctly',\n    integer              : '{name} must be an integer',\n    decimal              : '{name} must be a decimal number',\n    number               : '{name} must be set to a number',\n    is                   : '{name} must be \"{ruleValue}\"',\n    isExactly            : '{name} must be exactly \"{ruleValue}\"',\n    not                  : '{name} cannot be set to \"{ruleValue}\"',\n    notExactly           : '{name} cannot be set to exactly \"{ruleValue}\"',\n    contain              : '{name} cannot contain \"{ruleValue}\"',\n    containExactly       : '{name} cannot contain exactly \"{ruleValue}\"',\n    doesntContain        : '{name} must contain  \"{ruleValue}\"',\n    doesntContainExactly : '{name} must contain exactly \"{ruleValue}\"',\n    minLength            : '{name} must be at least {ruleValue} characters',\n    length               : '{name} must be at least {ruleValue} characters',\n    exactLength          : '{name} must be exactly {ruleValue} characters',\n    maxLength            : '{name} cannot be longer than {ruleValue} characters',\n    match                : '{name} must match {ruleValue} field',\n    different            : '{name} must have a different value than {ruleValue} field',\n    creditCard           : '{name} must be a valid credit card number',\n    minCount             : '{name} must have at least {ruleValue} choices',\n    exactCount           : '{name} must have exactly {ruleValue} choices',\n    maxCount             : '{name} must have {ruleValue} or less choices'\n  },\n\n  selector : {\n    checkbox   : 'input[type=\"checkbox\"], input[type=\"radio\"]',\n    clear      : '.clear',\n    field      : 'input, textarea, select',\n    group      : '.field',\n    input      : 'input',\n    message    : '.error.message',\n    prompt     : '.prompt.label',\n    radio      : 'input[type=\"radio\"]',\n    reset      : '.reset:not([type=\"reset\"])',\n    submit     : '.submit:not([type=\"submit\"])',\n    uiCheckbox : '.ui.checkbox',\n    uiDropdown : '.ui.dropdown'\n  },\n\n  className : {\n    error   : 'error',\n    label   : 'ui prompt label',\n    pressed : 'down',\n    success : 'success'\n  },\n\n  error: {\n    identifier : 'You must specify a string identifier for each field',\n    method     : 'The method you called is not defined.',\n    noRule     : 'There is no rule matching the one you specified',\n    oldSyntax  : 'Starting in 2.0 forms now only take a single settings object. Validation settings converted to new syntax automatically.'\n  },\n\n  templates: {\n\n    // template that produces error message\n    error: function(errors) {\n      var\n        html = '<ul class=\"list\">'\n      ;\n      $.each(errors, function(index, value) {\n        html += '<li>' + value + '</li>';\n      });\n      html += '</ul>';\n      return $(html);\n    },\n\n    // template that produces label\n    prompt: function(errors) {\n      return $('<div/>')\n        .addClass('ui basic red pointing prompt label')\n        .html(errors[0])\n      ;\n    }\n  },\n\n  rules: {\n\n    // is not empty or blank string\n    empty: function(value) {\n      return !(value === undefined || '' === value || $.isArray(value) && value.length === 0);\n    },\n\n    // checkbox checked\n    checked: function() {\n      return ($(this).filter(':checked').length > 0);\n    },\n\n    // is most likely an email\n    email: function(value){\n      return $.fn.form.settings.regExp.email.test(value);\n    },\n\n    // value is most likely url\n    url: function(value) {\n      return $.fn.form.settings.regExp.url.test(value);\n    },\n\n    // matches specified regExp\n    regExp: function(value, regExp) {\n      if(regExp instanceof RegExp) {\n        return value.match(regExp);\n      }\n      var\n        regExpParts = regExp.match($.fn.form.settings.regExp.flags),\n        flags\n      ;\n      // regular expression specified as /baz/gi (flags)\n      if(regExpParts) {\n        regExp = (regExpParts.length >= 2)\n          ? regExpParts[1]\n          : regExp\n        ;\n        flags = (regExpParts.length >= 3)\n          ? regExpParts[2]\n          : ''\n        ;\n      }\n      return value.match( new RegExp(regExp, flags) );\n    },\n\n    // is valid integer or matches range\n    integer: function(value, range) {\n      var\n        intRegExp = $.fn.form.settings.regExp.integer,\n        min,\n        max,\n        parts\n      ;\n      if( !range || ['', '..'].indexOf(range) !== -1) {\n        // do nothing\n      }\n      else if(range.indexOf('..') == -1) {\n        if(intRegExp.test(range)) {\n          min = max = range - 0;\n        }\n      }\n      else {\n        parts = range.split('..', 2);\n        if(intRegExp.test(parts[0])) {\n          min = parts[0] - 0;\n        }\n        if(intRegExp.test(parts[1])) {\n          max = parts[1] - 0;\n        }\n      }\n      return (\n        intRegExp.test(value) &&\n        (min === undefined || value >= min) &&\n        (max === undefined || value <= max)\n      );\n    },\n\n    // is valid number (with decimal)\n    decimal: function(value) {\n      return $.fn.form.settings.regExp.decimal.test(value);\n    },\n\n    // is valid number\n    number: function(value) {\n      return $.fn.form.settings.regExp.number.test(value);\n    },\n\n    // is value (case insensitive)\n    is: function(value, text) {\n      text = (typeof text == 'string')\n        ? text.toLowerCase()\n        : text\n      ;\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      return (value == text);\n    },\n\n    // is value\n    isExactly: function(value, text) {\n      return (value == text);\n    },\n\n    // value is not another value (case insensitive)\n    not: function(value, notValue) {\n      value = (typeof value == 'string')\n        ? value.toLowerCase()\n        : value\n      ;\n      notValue = (typeof notValue == 'string')\n        ? notValue.toLowerCase()\n        : notValue\n      ;\n      return (value != notValue);\n    },\n\n    // value is not another value (case sensitive)\n    notExactly: function(value, notValue) {\n      return (value != notValue);\n    },\n\n    // value contains text (insensitive)\n    contains: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) !== -1);\n    },\n\n    // value contains text (case sensitive)\n    containsExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) !== -1);\n    },\n\n    // value contains text (insensitive)\n    doesntContain: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text, 'i') ) === -1);\n    },\n\n    // value contains text (case sensitive)\n    doesntContainExactly: function(value, text) {\n      // escape regex characters\n      text = text.replace($.fn.form.settings.regExp.escape, \"\\\\$&\");\n      return (value.search( new RegExp(text) ) === -1);\n    },\n\n    // is at least string length\n    minLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // see rls notes for 2.0.6 (this is a duplicate of minLength)\n    length: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length >= requiredLength)\n        : false\n      ;\n    },\n\n    // is exactly length\n    exactLength: function(value, requiredLength) {\n      return (value !== undefined)\n        ? (value.length == requiredLength)\n        : false\n      ;\n    },\n\n    // is less than length\n    maxLength: function(value, maxLength) {\n      return (value !== undefined)\n        ? (value.length <= maxLength)\n        : false\n      ;\n    },\n\n    // matches another field\n    match: function(value, identifier) {\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() == matchingValue.toString() )\n        : false\n      ;\n    },\n\n    // different than another field\n    different: function(value, identifier) {\n      // use either id or name of field\n      var\n        $form = $(this),\n        matchingValue\n      ;\n      if( $('[data-validate=\"'+ identifier +'\"]').length > 0 ) {\n        matchingValue = $('[data-validate=\"'+ identifier +'\"]').val();\n      }\n      else if($('#' + identifier).length > 0) {\n        matchingValue = $('#' + identifier).val();\n      }\n      else if($('[name=\"' + identifier +'\"]').length > 0) {\n        matchingValue = $('[name=\"' + identifier + '\"]').val();\n      }\n      else if( $('[name=\"' + identifier +'[]\"]').length > 0 ) {\n        matchingValue = $('[name=\"' + identifier +'[]\"]');\n      }\n      return (matchingValue !== undefined)\n        ? ( value.toString() !== matchingValue.toString() )\n        : false\n      ;\n    },\n\n    creditCard: function(cardNumber, cardTypes) {\n      var\n        cards = {\n          visa: {\n            pattern : /^4/,\n            length  : [16]\n          },\n          amex: {\n            pattern : /^3[47]/,\n            length  : [15]\n          },\n          mastercard: {\n            pattern : /^5[1-5]/,\n            length  : [16]\n          },\n          discover: {\n            pattern : /^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)/,\n            length  : [16]\n          },\n          unionPay: {\n            pattern : /^(62|88)/,\n            length  : [16, 17, 18, 19]\n          },\n          jcb: {\n            pattern : /^35(2[89]|[3-8][0-9])/,\n            length  : [16]\n          },\n          maestro: {\n            pattern : /^(5018|5020|5038|6304|6759|676[1-3])/,\n            length  : [12, 13, 14, 15, 16, 17, 18, 19]\n          },\n          dinersClub: {\n            pattern : /^(30[0-5]|^36)/,\n            length  : [14]\n          },\n          laser: {\n            pattern : /^(6304|670[69]|6771)/,\n            length  : [16, 17, 18, 19]\n          },\n          visaElectron: {\n            pattern : /^(4026|417500|4508|4844|491(3|7))/,\n            length  : [16]\n          }\n        },\n        valid         = {},\n        validCard     = false,\n        requiredTypes = (typeof cardTypes == 'string')\n          ? cardTypes.split(',')\n          : false,\n        unionPay,\n        validation\n      ;\n\n      if(typeof cardNumber !== 'string' || cardNumber.length === 0) {\n        return;\n      }\n\n      // verify card types\n      if(requiredTypes) {\n        $.each(requiredTypes, function(index, type){\n          // verify each card type\n          validation = cards[type];\n          if(validation) {\n            valid = {\n              length  : ($.inArray(cardNumber.length, validation.length) !== -1),\n              pattern : (cardNumber.search(validation.pattern) !== -1)\n            };\n            if(valid.length && valid.pattern) {\n              validCard = true;\n            }\n          }\n        });\n\n        if(!validCard) {\n          return false;\n        }\n      }\n\n      // skip luhn for UnionPay\n      unionPay = {\n        number  : ($.inArray(cardNumber.length, cards.unionPay.length) !== -1),\n        pattern : (cardNumber.search(cards.unionPay.pattern) !== -1)\n      };\n      if(unionPay.number && unionPay.pattern) {\n        return true;\n      }\n\n      // verify luhn, adapted from  <https://gist.github.com/2134376>\n      var\n        length        = cardNumber.length,\n        multiple      = 0,\n        producedValue = [\n          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n          [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]\n        ],\n        sum           = 0\n      ;\n      while (length--) {\n        sum += producedValue[multiple][parseInt(cardNumber.charAt(length), 10)];\n        multiple ^= 1;\n      }\n      return (sum % 10 === 0 && sum > 0);\n    },\n\n    minCount: function(value, minCount) {\n      if(minCount == 0) {\n        return true;\n      }\n      if(minCount == 1) {\n        return (value !== '');\n      }\n      return (value.split(',').length >= minCount);\n    },\n\n    exactCount: function(value, exactCount) {\n      if(exactCount == 0) {\n        return (value === '');\n      }\n      if(exactCount == 1) {\n        return (value !== '' && value.search(',') === -1);\n      }\n      return (value.split(',').length == exactCount);\n    },\n\n    maxCount: function(value, maxCount) {\n      if(maxCount == 0) {\n        return false;\n      }\n      if(maxCount == 1) {\n        return (value.search(',') === -1);\n      }\n      return (value.split(',').length <= maxCount);\n    }\n  }\n\n};\n\n})( jQuery, window, document );\n"]}